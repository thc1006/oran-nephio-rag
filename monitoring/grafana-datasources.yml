# Grafana Data Sources Configuration
# Auto-provisioning for O-RAN Ã— Nephio RAG monitoring

apiVersion: 1

datasources:
  # Prometheus data source
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: jaeger
      prometheusType: Prometheus
      prometheusVersion: 2.48.0
      cacheLevel: 'High'
      incrementalQuerying: true
      incrementalQueryOverlapWindow: 10m
    secureJsonData: {}

  # Jaeger data source for distributed tracing
  - name: Jaeger
    type: jaeger
    uid: jaeger
    access: proxy
    url: http://jaeger:16686
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          { key: 'service.name', value: 'service' }
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: true
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [
          { key: 'service.name', value: 'service' },
          { key: 'job' }
        ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(rag_queries_total{}[$$__rate_interval]))'
      spanBar:
        type: 'Tag'
        tag: 'http.path'

  # Loki data source for logs
  - name: Loki
    type: loki
    uid: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - datasourceUid: jaeger
          matcherRegex: "(?:trace_id|traceID)(?:=|:)\\s*([a-f\\d]+)"
          name: TraceID
          url: '$${__value.raw}'
          urlDisplayLabel: 'View Trace'

  # AlertManager data source
  - name: AlertManager
    type: alertmanager
    access: proxy
    url: http://alertmanager:9093
    editable: true
    jsonData:
      implementation: prometheus
      handleGrafanaManagedAlerts: true

  # TestData data source for development/testing
  - name: TestData
    type: testdata
    access: proxy
    editable: true
    jsonData: {}

  # Tempo data source (if using Tempo instead of Jaeger)
  - name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    editable: true
    jsonData:
      httpMethod: GET
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance']
        mappedTags: [
          { key: 'service.name', value: 'service' }
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
      tracesToMetrics:
        datasourceUid: prometheus
        tags: [
          { key: 'service.name', value: 'service' },
          { key: 'job' }
        ]
        queries:
          - name: 'Request rate'
            query: 'sum(rate(rag_queries_total{$$__tags}[$$__rate_interval]))'
          - name: 'Request duration'
            query: 'histogram_quantile(0.95, sum(rate(rag_query_duration_seconds_bucket{$$__tags}[$$__rate_interval])) by (le))'
      serviceMap:
        datasourceUid: prometheus
      search:
        hide: false
      nodeGraph:
        enabled: true

  # CloudWatch data source (if deploying on AWS)
  - name: CloudWatch
    type: cloudwatch
    access: proxy
    editable: true
    jsonData:
      authType: default
      defaultRegion: us-east-1
      customMetricsNamespaces: 'ORANNephioRAG'
    secureJsonData:
      accessKey: '${AWS_ACCESS_KEY_ID}'
      secretKey: '${AWS_SECRET_ACCESS_KEY}'

  # MySQL data source (if using MySQL for metadata)
  - name: MySQL
    type: mysql
    access: proxy
    url: mysql:3306
    database: oran_rag_metadata
    user: grafana
    editable: true
    secureJsonData:
      password: '${MYSQL_PASSWORD}'
    jsonData:
      maxOpenConns: 100
      maxIdleConns: 100
      maxIdleConnsAuto: true
      connMaxLifetime: 14400

  # InfluxDB data source (alternative TSDB)
  - name: InfluxDB
    type: influxdb
    access: proxy
    url: http://influxdb:8086
    database: oran_rag_metrics
    user: grafana
    editable: true
    jsonData:
      version: 'Flux'
      organization: 'oran-rag'
      defaultBucket: 'metrics'
      tlsSkipVerify: true
    secureJsonData:
      token: '${INFLUXDB_TOKEN}'

  # Elasticsearch data source (for log analysis)
  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    database: 'oran-rag-logs-*'
    editable: true
    jsonData:
      interval: Daily
      timeField: '@timestamp'
      esVersion: '8.0.0'
      logMessageField: message
      logLevelField: level
      maxConcurrentShardRequests: 5
      includeFrozen: false
    secureJsonData:
      basicAuthPassword: '${ELASTICSEARCH_PASSWORD}'